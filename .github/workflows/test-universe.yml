name: "Test Universe"

on:
  push:
    branches: [main]
    paths:
      - "**.sh"
      - "**.bash"
      - "**.go"
      - "**.cue"
      - "**.bats"
      - "Makefile"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/test-universe.yml"
      - "!docs/**"

  pull_request:
    branches: [main]
    paths:
      - "**.sh"
      - "**.bash"
      - "**.go"
      - "**.cue"
      - "**.bats"
      - "Makefile"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/test-universe.yml"
      - "!docs/**"

env:
  DAGGER_CACHE_BASE: dagger-ci-universe

jobs:
  universe-europa-tests:
    name: "Universe Tests - Europa"
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: "Check out"
        uses: actions/checkout@v2

      - name: "Set up Go"
        uses: actions/setup-go@v1
        with:
          go-version: 1.16

      - name: "Install SOPS"
        run: |
          sudo curl -L -o /usr/local/bin/sops https://github.com/mozilla/sops/releases/download/v3.7.1/sops-v3.7.1.linux
          sudo chmod +x /usr/local/bin/sops

      - name: "Expose GitHub Runtime"
        uses: crazy-max/ghaction-github-runtime@v1

      - name: Start Buildkitd and Jaeger
        run: |
          JAEGER_CONTAINER_NAME=dagger-jaeger-ci
          JAEGER_VOLUME_SOURCE="${{ runner.temp }}/jaeger"
          export OTEL_EXPORTER_JAEGER_ENDPOINT="http://localhost:14268/api/traces"
          export JAEGER_TRACE="localhost:6831"
          docker run \
            --name ${JAEGER_CONTAINER_NAME} \
            -v ${JAEGER_VOLUME_SOURCE}:/badger \
            -e SPAN_STORAGE_TYPE=badger \
            -e BADGER_EPHEMERAL=false \
            -e BADGER_DIRECTORY_VALUE=/badger/data \
            -e BADGER_DIRECTORY_KEY=/badger/key \
            -d \
            --net=host \
            jaegertracing/all-in-one:1.33.0

          BUILDKIT_VERSION="$(go list -m github.com/moby/buildkit | cut -d' ' -f2)"
          BUILDKIT_CONTAINER_NAME=dagger-buildkitd-ci
          BUILDKIT_VOLUME_NAME=dagger-buildkitd-ci
          docker run \
            --name ${BUILDKIT_CONTAINER_NAME} \
            -v ${BUILDKIT_VOLUME_NAME}:/var/lib/buildkit \
            -e OTEL_EXPORTER_JAEGER_ENDPOINT \
            -e JAEGER_TRACE \
            -d \
            --net=host \
            --privileged \
            moby/buildkit:${BUILDKIT_VERSION} \
            "--debug"

          echo BUILDKIT_HOST="docker-container://${BUILDKIT_CONTAINER_NAME}" >> $GITHUB_ENV
          echo BUILDKIT_CONTAINER_NAME="${BUILDKIT_CONTAINER_NAME}" >> $GITHUB_ENV
          echo JAEGER_CONTAINER_NAME="${JAEGER_CONTAINER_NAME}" >> $GITHUB_ENV
          echo OTEL_EXPORTER_JAEGER_ENDPOINT="${OTEL_EXPORTER_JAEGER_ENDPOINT}" >> $GITHUB_ENV
          echo JAEGER_TRACE="${JAEGER_TRACE}" >> $GITHUB_ENV

      - name: Sets env vars on push to main
        run: |
          echo "DAGGER_CACHE_TO=type=gha,mode=max,scope=${{env.DAGGER_CACHE_BASE}}-main" >> $GITHUB_ENV
          echo "DAGGER_CACHE_FROM=type=gha,scope=${{env.DAGGER_CACHE_BASE}}-main" >> $GITHUB_ENV
        if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}

      - name: Sets env vars on pull request
        run: |
          echo "DAGGER_CACHE_TO=type=gha,mode=max,scope=${{env.DAGGER_CACHE_BASE}}-${{github.event.number}}" >> $GITHUB_ENV
          echo "DAGGER_CACHE_FROM=type=gha,scope=${{env.DAGGER_CACHE_BASE}}-main type=gha,scope=${{env.DAGGER_CACHE_BASE}}-${{github.event.number}}" >> $GITHUB_ENV
        if: ${{ github.event_name == 'pull_request' }}

      - name: Test
        run: |
          export DAGGER_LOG_FORMAT=plain
          make universe-test

      - name: Print Buildkitd Logs
        if: always()
        run: |
          docker logs ${BUILDKIT_CONTAINER_NAME}

      - name: Stop Buildkitd and Jaeger
        if: always()
        run: |
          docker stop ${BUILDKIT_CONTAINER_NAME}
          docker stop ${JAEGER_CONTAINER_NAME}
          sudo chown -R ${USER} ${{ runner.temp }}/jaeger

      - name: Upload Jaeger Data
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: jaeger_data
          path: ${{ runner.temp }}/jaeger

      - name: Print Jaeger View Command
        if: always()
        run: |
          echo "To view Jaeger traces, run the follow from a local Dagger repo:"
          echo dagger do -p ci/jaeger/jaeger.cue jaegerView --with \'actions: jaegerView: {runID: \"${GITHUB_RUN_ID}\", repository: \"${GITHUB_REPOSITORY}\", artifactName: \"jaeger_data\"}\'
